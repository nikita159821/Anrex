name: Python Selenium Tests

on:
  push:
  schedule:
    - cron: '0 * * * *'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download-history
    steps:
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: |
          # Получаем список артефактов
          ARTIFACT_LIST=$(curl -L -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version:2022-11-28" \
            "https://api.github.com/repos/nikita159821/Anrex/actions/artifacts?per_page=50&page=1")
          
          # Извлекаем ID последних 50 артефактов
          ARTIFACT_IDS=$(echo $ARTIFACT_LIST | python3 -c "import sys, json; print(','.join([str(a['id']) for a in json.load(sys.stdin)['artifacts']]))")
          
          # Скачиваем последние 50 артефактов
          for ARTIFACT_ID in $(echo $ARTIFACT_IDS | tr ',' ' '); do
            curl -L -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
              -H "X-GitHub-Api-Version:2022-11-28" \
              https://api.github.com/repos/nikita159821/Anrex/actions/artifacts/$ARTIFACT_ID/zip \
              -o artifacts.zip
            mkdir "allure results" && unzip -j artifacts.zip -d "allure results"
          done
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure results
          retention-days: 1


  test:
    runs-on: ubuntu-latest
    needs: download-history
    steps:
      - name: Install Selenium
        run: pip install selenium
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifact
        uses: actions/download-artifact@v3
      - name: Cleanup old artifacts
        run: |
          rm -rf allure-results/*
      - name: Run tests
        run: pytest tests/test_title_city.py --alluredir=allure-results
      - name: Generate Allure Report
        if: failure() # Выполнять, только если предыдущие задачи завершились неудачно
        run: |
          allure generate allure-results -o allure-report
          allure open allure-report
      - name: Store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 1


  generate-report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report
          allure open allure-report
      - name: Store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 1



  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9