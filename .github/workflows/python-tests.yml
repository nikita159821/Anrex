on:
  push:
  schedule:
    - cron: '0 * * * *'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  download-history:
    runs-on: ubuntu-latest
    name: Скачивание истории
    steps:
      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: |
          ARTIFACT_LIST=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version:2022-11-28" \
          "https://api.github.com/repos/nikita159821/Anrex/actions/artifacts?per_page=1&page=1" \
          | python3 -c "import sys, json; print(','.join([str(artifact['id']) for artifact in json.load(sys.stdin)['artifacts']]));")
          
          for ARTIFACT_ID in $(echo $ARTIFACT_LIST | tr ',' '\n'); do
            curl -L -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version:2022-11-28" \
            https://api.github.com/repos/nikita159821/Anrex/actions/artifacts/$ARTIFACT_ID/zip \
            -o $ARTIFACT_ID.zip
            unzip -o -j $ARTIFACT_ID.zip -d "allure results"
            rm $ARTIFACT_ID.zip
          done
      - name: Cleanup old artifacts
        run: |
          rm -rf allure-results/*
      - name: Сохранение истории Allure
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure results
          retention-days: 1


  test:
    runs-on: ubuntu-latest
    needs: download-history
    steps:
      - name: Install Selenium
        run: pip install selenium
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifact
        uses: actions/download-artifact@v3
      - name: Cleanup old artifacts
        run: |
          rm -rf allure-results/*
      - name: Run tests
        run: pytest tests/test_callback_link.py --alluredir=allure-results
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 1


  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Генерация отчета
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Скачивание артефактов
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Сохранение ссылки на отчет
        run: |
          echo "REPORT_URL=https://nikita159821.github.io/Anrex/" >> $GITHUB_OUTPUT
      - name: Сохранение сгенерированного отчета
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path:
            _site
          retention-days: 1


  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Публикация отчета
    steps:
      - name: Скачивание артефактов
        uses: actions/download-artifact@v3
      - name: Загрузка артефакта страниц
        uses: actions/upload-pages-artifact@v2
      - name: Развертывание на GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9

      - name: Обновление номера отчета
        id: update_report_number
        run: |
          REPORT_NUMBER=$(( $(cat report_number.txt 2>/dev/null || echo "0") + 1 ))
          echo "$REPORT_NUMBER" > report_number.txt
          echo "REPORT_URL=${{ steps.generate-report.outputs.REPORT_URL }}/Report_$REPORT_NUMBER" >> $GITHUB_OUTPUT
          echo "REPORT_NUMBER=$REPORT_NUMBER" >> $GITHUB_OUTPUT
          echo "REPORT_NUMBER=$REPORT_NUMBER" >> $GITHUB_STEP_SUMMARY
      - name: Отправка уведомления в Telegram
        env:
          REPORT_URL: ${{ steps.update_report_number.outputs.REPORT_URL }}
          REPORT_NUMBER: ${{ steps.update_report_number.outputs.REPORT_NUMBER }}
        run: |
          curl --location 'https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage' \
          --header 'Content-Type: application/json' \
          --data "{\"chat_id\":${{ secrets.TELEGRAM_CHAT_ID }},\"text\": \"Отчет_1 - https://nikita159821.github.io/Anrex/Report_1"}"

  
