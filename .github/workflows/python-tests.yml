on:
  push:
  schedule:
    - cron: '0 */2 * * *'
permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  test:
    runs-on: ubuntu-latest
    name: Запуск тестов
    steps:
      - name: Install Selenium
        run: pip install selenium
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Uninstall the Firefox Snap
        run: sudo snap remove firefox
      - name: Create an APT keyring
        run: sudo install -d -m 0755 /etc/apt/keyrings
      - name: Import the Mozilla APT repo signing key
        run: wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null
      - name: Add the Mozilla signing key to your sources.list
        run: |
          echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
      - name: Set the Firefox package priority
        run: |
          echo '
          Package: *
          Pin: origin packages.mozilla.org
          Pin-Priority: 1000
          ' | sudo tee /etc/apt/preferences.d/mozilla
      - name: Install Firefox
        run: sudo apt update && sudo apt install --allow-downgrades firefox
      - name: Install webdriver_manager
        run: pip install webdriver_manager
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Cleanup old artifacts
        run: |
          rm -rf allure-results/*
      - name: Run tests
        run: |
          pytest tests_main_page/test_callback_link.py --alluredir=allure-results --junitxml=junit-report.xml
          python tests_main_page/path/to/your_script.py
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 1
      - name: Store junit report
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: modified_report.xml
          retention-days: 1

  generate-report_2:
    runs-on: ubuntu-latest
    needs: test
    name: Дока
    steps:
      - name: Download doqa-cli
        run: |
          wget https://doqa.app/downloads/doqa-cli
          chmod +x doqa-cli
      - name: Send junit report
        run: |
          ./doqa-cli report https://rumerkulov.doqa.app/api/autotests/report 4677a0f4-656c-4d4c-8130-502c57d747d4 modified_report.xml

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Генерация отчета в Telegram
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Скачивание артефактов
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Сохранение ссылки на отчет
        run: |
          echo "REPORT_URL=https://nikita159821.github.io/Anrex/" >> $GITHUB_OUTPUT
      - name: Сохранение сгенерированного отчета
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path:
            _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Публикация и отправка отчёта
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
      - name: Update Report Number
        id: update_report_number_2
        env:
          REPORT_NUMBER_2: ${{ secrets.REPORT_NUMBER_2 }}
        run: |
          REPORT_NUMBER_2=$((REPORT_NUMBER_2 + 1))
          echo "REPORT_NUMBER_2=$REPORT_NUMBER_2" >> $GITHUB_OUTPUT
          echo "REPORT_NUMBER=$REPORT_NUMBER_2" >> $GITHUB_STEP_SUMMARY
          echo "REPORT_NUMBER_2=$REPORT_NUMBER_2" >> $GITHUB_ENV
          echo "Current REPORT_NUMBER_2 value before update: $REPORT_NUMBER_2"
          # Обновленное значение
          REPORT_NUMBER_2=$((REPORT_NUMBER_2))
          echo "Current REPORT_NUMBER_2 value after update: $REPORT_NUMBER_2"
      - name: Setup GitHub CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install requests

      - name: Update REPORT_NUMBER_2 Secret
        env:
          REPORT_NUMBER_2: ${{ steps.update_report_number_2.outputs.REPORT_NUMBER_2 }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        shell: python
        run: |
          import requests
          import json
          import os
          # Вывод значения REPORT_NUMBER_2 перед обновлением
          print(f"REPORT_NUMBER_2 value before update: {os.environ['REPORT_NUMBER_2']}")
          # Обновление секрета
          url = f"https://api.github.com/repos/{os.environ['GITHUB_REPOSITORY']}/actions/secrets/REPORT_NUMBER_2"
          payload = {
              "encrypted_value": "wtbo12EY4WLpuAQ+WOCc+l42hxp7OzPG9vZUwOgol3AGWjDMCvCl+2mF/GnmEDPdqA==",
              "key_id": "3380204578043523366"
          }
          headers = {
              'Accept': 'application/vnd.github+json',
              'Authorization': f'Bearer {os.environ["GITHUB_TOKEN"]}',
              'X-GitHub-Api-Version': '2022-11-28'
          }
          response = requests.post(url, headers=headers, data=json.dumps(payload))
          # Вывод ответа от GitHub API
          print(f"GitHub API response status code: {response.status_code}")
          print(f"GitHub API response text: {response.text}")
          if response.status_code == 204:
              print("Секрет успешно обновлен")
          else:
              print(f"Ошибка обновления секрета: {response.status_code} - {response.text}")
      - name: Send Telegram Notification
        env:
          REPORT_NUMBER_2: ${{ steps.update_report_number_2.outputs.REPORT_NUMBER_2 }}
        run: |
          curl --location 'https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage' \
          --header 'Content-Type: application/json' \
          --data "{\"chat_id\":5030902696,\"text\": \"Report_$REPORT_NUMBER_2 https://nikita159821.github.io/Anrex/\"}"