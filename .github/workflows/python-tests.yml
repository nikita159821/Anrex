on:
  push:
  schedule:
    - cron: '0 * * * *'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  download-history:
    runs-on: ubuntu-latest
    name: Скачивание истории
    steps:
      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: |
          ARTIFACT_LIST=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version:2022-11-28" \
          "https://api.github.com/repos/nikita159821/Anrex/actions/artifacts?per_page=1&page=1" \
          | python3 -c "import sys, json; print(','.join([str(artifact['id']) for artifact in json.load(sys.stdin)['artifacts']]));")
          
          for ARTIFACT_ID in $(echo $ARTIFACT_LIST | tr ',' '\n'); do
            curl -L -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version:2022-11-28" \
            https://api.github.com/repos/nikita159821/Anrex/actions/artifacts/$ARTIFACT_ID/zip \
            -o $ARTIFACT_ID.zip
            unzip -o -j $ARTIFACT_ID.zip -d "allure results"
            rm $ARTIFACT_ID.zip
          done
      - name: Cleanup old artifacts
        run: |
          rm -rf allure-results/*
      - name: Сохранение истории Allure
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history
    outputs:
      test-result: ${{ steps.run-tests.outputs.test-result }}
    steps:
    - name: Install Selenium
      run: pip install selenium
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    - name: Install Chrome
      run: sudo apt-get install google-chrome-stable
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Download all workflow run artifact
      uses: actions/download-artifact@v3
    - name: Cleanup old artifacts
      run: rm -rf allure-results/*
    - name: Run tests
      id: run-tests
      run: |
        pytest tests/test_title_city.py --alluredir=allure-results
        if pytest --exitfirst; then
          echo "::set-output name=test-result::0"
        else
          echo "::set-output name=test-result::1"
        fi
        continue-on-error: true
    - name: Store allure results
      uses: actions/upload-artifact@v3
      with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          sudo tar -zxvf allure-2.23.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifact
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path: _site
          retention-days: 1

        
  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1.2.9
    - name: Check test results and send Telegram message
      run: |
        if [ '${{ needs.test.outputs.test-result }}' -ne 0 ]; then
          curl --location 'https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage' \
            --header 'Content-Type: application/json' \
            --data '{"chat_id":5030902696,"text": "Tests FAILED. Report: https://nikita159821.github.io/Anrex/"}'
        else
          curl --location 'https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage' \
            --header 'Content-Type: application/json' \
            --data '{"chat_id":5030902696,"text": "Tests PASSED. Report: https://nikita159821.github.io/Anrex/"}'
        fi


          

          

      
        
